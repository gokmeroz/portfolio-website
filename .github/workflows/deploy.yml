name: Deploy website (S3 + CloudFront)

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: website-deploy
  cancel-in-progress: true

env:
  WORKDIR: .

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ${{ env.WORKDIR }}/package-lock.json
      - name: Install deps
        working-directory: ${{ env.WORKDIR }}
        run: npm ci
      - name: Build
        working-directory: ${{ env.WORKDIR }}
        run: npm run build
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Deploy to S3 (assets with long cache)
        run: |
          aws s3 sync "${WORKDIR}/dist" "s3://${S3_BUCKET}" \
            --delete \
            --exclude index.html \
            --cache-control "public,max-age=31536000,immutable"
        env:
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
      - name: Upload index.html (no-cache)
        run: |
          aws s3 cp "${WORKDIR}/dist/index.html" "s3://${S3_BUCKET}/index.html" \
            --cache-control "no-cache, no-store, must-revalidate" \
            --content-type "text/html"
        env:
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${CLOUDFRONT_DISTRIBUTION_ID}" \
            --paths "/*"
        env:
          CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
